# -*- mode: ruby -*-
# vi: set ft=ruby :

# install vagrant plugins:
#
# vagrant plugin install vagrant-hostsupdater
#
#
#

# 
# modify config:
#
# sed -c -i "s/\($TARGET_KEY *= *\).*/\1$REPLACEMENT_VALUE/" $CONFIG_FILE
#
#


vagrant_root = File.dirname(__FILE__)
disk = "#{vagrant_root}/vm-fdt-db.vdi"

Vagrant.configure(2) do |config|

#config.vm.box = "ansiwen/fedora-23"
  config.vm.box = "boxcutter/fedora23"
  config.vm.hostname = "vm-fdt"
  config.vm.box_check_update = false

  config.vm.network "private_network", ip: "192.168.56.118"
 
  config.vm.synced_folder vagrant_root, "/vagrant/", disabled: true
  config.vm.synced_folder "#{vagrant_root}/logs", "/vagrant/logs", create: true
  config.vm.synced_folder "#{vagrant_root}/fdt", "/vagrant/fdt", create: true
  config.vm.synced_folder "#{vagrant_root}/ipspecs", "/vagrant/ipspecs", create: true
  config.vm.synced_folder "#{vagrant_root}/vme", "/vagrant/vme", create: true
  config.vm.synced_folder "#{vagrant_root}/shared", "/vagrant/shared", create: true
  config.vm.synced_folder "#{vagrant_root}/rockmongo", "/vagrant/rockmongo", create: true

#  config.hostsupdater.aliases = ["fdt", "ipspecs", "acp.rg", "api.ipspecs", "acp.ipspecs", "rg", "vme", "api.vme", "acp.vme"]
  
  config.vm.provider "virtualbox" do |vb|

        vb.memory = "2048"
        vb.cpus = 2
        vb.name = "vm-fdt"
        
        unless File.exists?(disk)
            vb.customize ['createhd', '--filename', disk, '--variant', 'Standard', '--size', 60*1024]
        end
        
        vb.customize ['storageattach', :id,  '--storagectl', 'IDE Controller', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', disk]
    
  end
#=begin
  config.vm.provision "shell", inline: <<-SHELL
mkdir -p /mnt/vagrant_data
chown vagrant.vagrant /mnt/vagrant_data
echo "cd /vagrant/" >> /home/vagrant/.bash_profile
SHELL
#=end

#=begin
  # general system config and setup
  config.vm.provision "shell", inline: <<-SHELL
echo "127.0.0.1 localhost" >> /etc/hosts
timedatectl set-timezone Europe/Minsk
cat > /etc/rc.d/rc.local <<EOL
#!/bin/bash

EOL
chmod a+x /etc/rc.d/rc.local
mkdir -p /vagrant/logs
chmod a+rw /vagrant/logs/
mkdir -p /vagrant/shared/php_include/

SHELL
#=end

#=begin
  # attach secondary storage
  config.vm.provision "shell", inline: <<-SHELL
parted /dev/sdb mklabel msdos
parted /dev/sdb mkpart primary 512 100%
mkfs.xfs /dev/sdb1
mkdir -p /mnt/disk
echo `blkid /dev/sdb1 | awk '{print$2}' | sed -e 's/"//g'` /mnt/disk xfs noatime,nobarrier 0 0 >> /etc/fstab
mount /mnt/disk
SHELL
#=end

#=begin
  # install packages
  config.vm.provision "shell", inline: <<-SHELL
dnf install -y telnet tor torsocks nc librabbitmq-devel librabbitmq memcached htop words ruby git ruby-devel redhat-rpm-config gcc-c++ rubygems community-mysql-server rabbitmq-server autoconf libmemcached-devel openssl-devel libmcrypt-devel aspell-devel readline-devel tidy-devel gcc parted nano mc httpd httpd-devel libxml2 libxml2-devel bzip2-devel libcurl-devel libjpeg-turbo libjpeg-turbo-devel libpng-devel freetype-devel 
SHELL
#=end

#=begin
  # enable services
  config.vm.provision "shell", inline: <<-SHELL
systemctl enable memcached.service
systemctl start memcached.service
systemctl enable tor.service
systemctl start tor.service
systemctl enable rabbitmq-server.service
systemctl start rabbitmq-server.service
SHELL
#=end

#=begin
  # apache config
  config.vm.provision "shell", inline: <<-SHELL
cat  > /etc/httpd/conf/httpd.conf  <<EOL
ServerRoot "/etc/httpd"
Listen 80
LoadModule php5_module        /usr/lib64/httpd/modules/libphp5.so
Include conf.modules.d/*.conf
User vagrant
Group vagrant
ServerAdmin root@localhost
<Directory />
    AllowOverride All
    Allow from all
</Directory>
DocumentRoot "/vagrant/"
<Directory "/var/www">
    AllowOverride None
    Require all granted
</Directory>
<Directory "/var/www/html">
    Options Indexes FollowSymLinks
    AllowOverride None
    Require all granted
</Directory>
<IfModule dir_module>
    DirectoryIndex index.html
</IfModule>
<Files ".ht*">
    Require all denied
</Files>
ErrorLog "logs/error_log"
LogLevel warn
<IfModule log_config_module>
    LogFormat "%h %l %u %t \\"%r\\" %>s %b \\"%{Referer}i\\" \\"%{User-Agent}i\\"" combined
    LogFormat "%h %l %u %t \\"%r\\" %>s %b" common
    <IfModule logio_module>
      LogFormat "%h %l %u %t \\"%r\\" %>s %b \\"%{Referer}i\\" \\"%{User-Agent}i\\" %I %O" combinedio
    </IfModule>
    CustomLog "logs/access_log" combined
</IfModule>
<IfModule alias_module>
    ScriptAlias /cgi-bin/ "/var/www/cgi-bin/"
</IfModule>
<Directory "/var/www/cgi-bin">
    AllowOverride None
    Options None
    Require all granted
</Directory>
<IfModule mime_module>
    TypesConfig /etc/mime.types
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz
    AddType text/html .shtml
    AddOutputFilter INCLUDES .shtml
</IfModule>
AddDefaultCharset UTF-8
<IfModule mime_magic_module>
    MIMEMagicFile conf/magic
</IfModule>
EnableSendfile off
<Directory /vagrant/>
 Options +Indexes +FollowSymLinks
 Allow from all
</Directory>
IncludeOptional conf.d/*.conf
NameVirtualHost *:80
EOL

SHELL
#=end

#=begin
  # compile PHP
  config.vm.provision "shell", inline: <<-SHELL
cd /usr/src/
wget -nv https://php.net/get/php-5.6.7.tar.bz2/from/this/mirror -O php-5.6.7.tar.bz2
tar -xjf php-5.6.7.tar.bz2
cd php-5.6.7
make clean
./configure --with-mysql=mysqlnd --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --with-libdir=lib64 --enable-ftp --enable-mbstring --enable-exif --with-openssl --with-pspell --with-jpeg-dir=/usr --with-png-dir=/usr --with-freetype-dir=/usr --with-gd --enable-gd-native-ttf --enable-inline-optimization --with-curl --with-kerberos --with-gettext --with-readline --with-zlib --with-zlib-dir=/usr --with-bz2 --with-mcrypt --with-ldap --with-ldap-sasl --with-tidy --enable-zip --enable-pcntl --enable-soap --enable-calendar --enable-sockets --with-apxs2=/usr/bin/apxs
make
make install
ln -s /usr/local/bin/php /usr/bin/php
\\cp /usr/src/php-5.6.7/php.ini-development /usr/local/lib/php.ini
sed -c -i "s/\\(short_open_tag *= *\\).*/\\1On/" /usr/local/lib/php.ini
sed -c -i "s/\\(memory_limit *= *\\).*/\\1512M/" /usr/local/lib/php.ini
sed -c -i "s/\\(upload_max_filesize *= *\\).*/\\132M/" /usr/local/lib/php.ini
cat >> /usr/local/lib/php.ini <<EOL

error_log = /vagrant/logs/php_error.log

EOL
cat  > /etc/httpd/conf.d/php.conf  <<EOL
LoadModule php5_module modules/libphp5.so
AddHandler php5-script .php
AddType text/html .php
DirectoryIndex index.php
EOL

systemctl enable httpd.service
apachectl restart
SHELL
#=end

#=begin
  # PHP modules
  config.vm.provision "shell", inline: <<-SHELL
/usr/local/bin/pecl config-set php_ini /usr/local/lib/php.ini
printf "\n" | /usr/local/bin/pecl install memcached
/usr/local/bin/pecl install mongo-1.6.9
/usr/local/bin/pecl install xdebug
/usr/local/bin/pecl install amqp-1.6.1

cat >> /usr/local/lib/php.ini <<EOL

extension=memcached.so
extension=mongo.so
zend_extension=xdebug.so
extension=amqp.so

[xdebug]
xdebug.remote_enable=1
xdebug.remote_host="192.168.56.1"
xdebug.remote_port=9000
xdebug.remote_idkey=XDEBUGIDKEY
xdebug.profiler_enable=Off
xdebug.profiler_trigger=On
xdebug.profiler_output_dir="/vagrant/xdebug"
[Date]
date.timezone = Europe/Minsk

EOL
apachectl restart

cd /usr/src/
wget -nv https://phar.phpunit.de/phpunit.phar
chmod +x phpunit.phar
cp phpunit.phar /vagrant/shared/php_include/phpunit.phar
mv phpunit.phar /usr/local/bin/phpunit

cd /usr/src/
php -r "readfile('https://getcomposer.org/installer');" > composer-setup.php
php -r "if (hash('SHA384', file_get_contents('composer-setup.php')) === '781c98992e23d4a5ce559daf0170f8a9b3b91331ddc4a3fa9f7d42b6d981513cdc1411730112495fbf9d59cffbf20fb2') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
cp composer.phar /vagrant/shared/php_include/composer.phar
mv composer.phar /usr/local/bin/composer

SHELL
#=end

#=begin
  # PhpMyAdmin
  config.vm.provision "shell", inline: <<-SHELL
cd /usr/src/
wget -nv https://files.phpmyadmin.net/phpMyAdmin/4.5.3.1/phpMyAdmin-4.5.3.1-english.tar.bz2
tar -xjf phpMyAdmin-4.5.3.1-english.tar.bz2
cp -R phpMyAdmin-4.5.3.1-english /var/www/phpmyadmin

cd /var/www/phpmyadmin/
cat > /var/www/phpmyadmin/config.inc.php <<EOL
<?php
\\$i = 0;
\\$i++;
\\$cfg['Servers'][\\$i]['verbose'] = 'vm-fdt';
\\$cfg['Servers'][\\$i]['host'] = '127.0.0.1';
\\$cfg['Servers'][\\$i]['port'] = '';
\\$cfg['Servers'][\\$i]['socket'] = '';
\\$cfg['Servers'][\\$i]['connect_type'] = 'tcp';
\\$cfg['Servers'][\\$i]['auth_type'] = 'config';
\\$cfg['Servers'][\\$i]['user'] = 'root';
\\$cfg['Servers'][\\$i]['password'] = '';
\\$cfg['Servers'][\\$i]['AllowNoPassword'] = true;
\\$cfg['blowfish_secret'] = '5522d129ef83a1.90473684';
\\$cfg['DefaultLang'] = 'en';
\\$cfg['ServerDefault'] = 1;
\\$cfg['UploadDir'] = '';
\\$cfg['SaveDir'] = '';
\\$cfg['CheckConfigurationPermissions'] = false;
\\$cfg['LoginCookieRecall'] = false;
\\$cfg['LoginCookieDeleteAll'] = false;
\\$cfg['UserprefsDeveloperTab'] = true;
\\$cfg['DBG']['sql'] = true;
\\$cfg['NavigationDisplayLogo'] = false;
\\$cfg['UserprefsDisallow'] = array('NavigationDisplayLogo');
EOL

cat  > /etc/httpd/conf.d/phpmyadmin.conf <<EOL
Alias /phpMyAdmin /var/www/phpmyadmin
Alias /phpmyadmin /var/www/phpmyadmin
EOL
apachectl restart
SHELL
#=end

#=begin
  # setup MongoDB
  config.vm.provision "shell", inline: <<-SHELL
cd /usr/src/
wget -nv http://downloads.mongodb.org/linux/mongodb-linux-x86_64-amazon-3.0.6.tgz -O mongodb-linux-x86_64-amazon-3.0.6.tgz
tar -xzf mongodb-linux-x86_64-amazon-3.0.6.tgz
cp -R mongodb-linux-x86_64-amazon-3.0.6/ /usr/local/mongodb

cat >> /etc/rc.d/rc.local <<EOL
/usr/local/mongodb/bin/mongod -f /etc/mongodb/standalone.conf
EOL

mkdir /etc/mongodb
cat > /etc/mongodb/standalone.conf <<EOL
dbpath = /mnt/disk/mongodb
storageEngine = wiredTiger
logpath = /mnt/disk/mongodb/mongo.log
fork = true
EOL

ln -s /usr/local/mongodb/bin/mongo /usr/local/bin/mongo
ln -s /usr/local/mongodb/bin/mongodump /usr/local/bin/mongodump
ln -s /usr/local/mongodb/bin/mongoexport /usr/local/bin/mongoexport
ln -s /usr/local/mongodb/bin/mongoimport /usr/local/bin/mongoimport
ln -s /usr/local/mongodb/bin/mongorestore /usr/local/bin/mongorestore

mkdir /mnt/disk/mongodb

/usr/local/mongodb/bin/mongod -f /etc/mongodb/standalone.conf

SHELL
#=end

#=begin
  # setup RockMongo
  config.vm.provision "shell", inline: <<-SHELL
cd /vagrant/rockmongo
git clone https://github.com/7workers/rockmongo.git .

cat > /vagrant/rockmongo/config.php <<EOL
<?php
\\$MONGO = array();
\\$MONGO["features"]["log_query"] = "on";
\\$MONGO["features"]["theme"] = "default";
\\$MONGO["features"]["plugins"] = "on";
\\$i = 0;
\\$MONGO["servers"][\\$i]["mongo_name"] = "vm-fdt";
\\$MONGO["servers"][\\$i]["mongo_host"] = "127.0.0.1";
\\$MONGO["servers"][\\$i]["mongo_port"] = "27017";
\\$MONGO["servers"][\\$i]["mongo_timeout"] = 0;
\\$MONGO["servers"][\\$i]["mongo_auth"] = false;
\\$MONGO["servers"][\\$i]["control_auth"] = false;
\\$MONGO["servers"][\\$i]["control_users"]["admin"] = "admin";
\\$MONGO["servers"][\\$i]["ui_only_dbs"] = "";
\\$MONGO["servers"][\\$i]["ui_hide_dbs"] = "";
\\$MONGO["servers"][\\$i]["ui_hide_collections"] = "";
\\$MONGO["servers"][\\$i]["ui_hide_system_collections"] = false;

EOL

cat  > /etc/httpd/conf.d/rockmongo.conf <<EOL
Alias /rockmongo /vagrant/rockmongo
EOL
apachectl restart

SHELL
#=end


#=begin
  # setup MySQL
  config.vm.provision "shell", inline: <<-SHELL
sed -c -i "s/\\(datadir *= *\\).*/\\1\\/mnt\\/disk\\/mysqldata/" /etc/my.cnf.d/community-mysql-server.cnf
sed -c -i "s/\\(log\\-error *= *\\).*/\\1\\/mnt\\/disk\\/mysqld\\.log/" /etc/my.cnf.d/community-mysql-server.cnf
systemctl enable mysqld.service
systemctl restart mysqld.service

SHELL
#=end

#=begin
  # setup mailcatcher
  config.vm.provision "shell", inline: <<-SHELL
gem install mailcatcher

cat >> /etc/rc.d/rc.local <<EOL
/usr/local/bin/mailcatcher --http-ip 192.168.56.118
EOL

cat >> /usr/local/lib/php.ini <<EOL
sendmail_path = /usr/bin/env catchmail -f some@from.address
EOL

/usr/local/bin/mailcatcher --http-ip 192.168.56.118

SHELL
#=end

#=begin
  # etc
  config.vm.provision "shell", inline: <<-SHELL
#
#
#

apachectl restart

SHELL
#=end

#=begin
  # vhost default
  config.vm.provision "shell", inline: <<-SHELL
cat > /etc/httpd/conf.d/vm-fdt.conf <<EOL
<VirtualHost *:80>
    DocumentRoot /var/www/html
    ServerName vm-fdt
    RewriteEngine On
</VirtualHost>
EOL
echo "127.0.0.1 vm-fdt" >> /etc/hosts
cat >> /var/www/html/index.html <<EOL
<h1>Welcome to VM-FDT!</h1>
<a href="http://vm-fdt/phpmyadmin/">PhpMyAdmin</a><br/>
<a href="http://vm-fdt/rockmongo/">RockMongo</a><br/>
<a href="http://vm-fdt:1080/">MailCatched</a><br/>
<hr/>
Max Deshkevich <7workers@gmail.com>
EOL

SHELL
#=end

#=begin
  # vhost FDT
  config.vm.provision "shell", inline: <<-SHELL
cat >> /etc/httpd/conf.d/fdt.conf <<EOL
<VirtualHost *:80>
    DocumentRoot /vagrant/fdt/code/web
    ServerName fdt
    ServerAlias www.fdt
    ErrorLog    /vagrant/logs/fdt-error.log
    CustomLog   /vagrant/logs/fdt-access.log common
    RewriteEngine On
</VirtualHost>
EOL
echo "127.0.0.1 fdt www.fdt" >> /etc/hosts
SHELL
#=end

#=begin
  # vhost IpSpecs
  config.vm.provision "shell", inline: <<-SHELL
cat >> /etc/httpd/conf.d/ipspecs.conf <<EOL
<VirtualHost *:80>
    DocumentRoot /vagrant/ipspecs/code/docroot_acp
    ServerName ipspecs
    ServerAlias acp.ipspecs
    ErrorLog    /vagrant/logs/ipspecs-acp-error.log
    CustomLog   /vagrant/logs/ipspecs-acp-access.log common
    RewriteEngine On
</VirtualHost>
<VirtualHost *:80>
    DocumentRoot /vagrant/ipspecs/code/docroot_api
    ServerName api.ipspecs
    ErrorLog    /vagrant/logs/ipspecs-api-error.log
    CustomLog   /vagrant/logs/ipspecs-api-access.log common
    RewriteEngine On
</VirtualHost>
<VirtualHost *:80>
    DocumentRoot /vagrant/ipspecs/code/docroot_website
    ServerName www.ipspecs
    ErrorLog    /vagrant/logs/ipspecs-www-error.log
    CustomLog   /vagrant/logs/ipspecs-www-access.log common
    RewriteEngine On
</VirtualHost>
EOL
echo "127.0.0.1 ipspecs api.ipspecs www.ipspecs acp.ipspecs" >> /etc/hosts
SHELL
#=end

#=begin
  # vhost ACP.RG
  config.vm.provision "shell", inline: <<-SHELL
cat >> /etc/httpd/conf.d/acprg.conf <<EOL
<VirtualHost *:80>
    DocumentRoot /vagrant/fdt/code/docroot_acp
    ServerName acp.rg
    ErrorLog    /vagrant/logs/acp.rg-error.log
    CustomLog   /vagrant/logs/acp.rg-access.log common
    RewriteEngine On
</VirtualHost>
EOL
echo "127.0.0.1 acp.rg" >> /etc/hosts
SHELL
#=end

#=begin
  # vhost VME
  config.vm.provision "shell", inline: <<-SHELL
cat >> /etc/httpd/conf.d/vme.conf <<EOL
<VirtualHost *:80>
    DocumentRoot /vagrant/vme/code/docroot_acp
    ServerName acp.vme
    ErrorLog    /vagrant/logs/vme-error.log
    CustomLog   /vagrant/logs/vme-access.log common
    RewriteEngine On
</VirtualHost>
<VirtualHost *:80>
    DocumentRoot /vagrant/vme/code/docroot_api
    ServerName api.vme
    ErrorLog    /vagrant/logs/vme-error.log
    CustomLog   /vagrant/logs/vme-access.log common
    RewriteEngine On
</VirtualHost>
<VirtualHost *:80>
    DocumentRoot /vagrant/vme/code/docroot_website
    ServerName vme
    ErrorLog    /vagrant/logs/vme-error.log
    CustomLog   /vagrant/logs/vme-access.log common
    RewriteEngine On
</VirtualHost>
EOL
echo "127.0.0.1 vme acp.vme api.vme" >> /etc/hosts
SHELL
#=end

#=begin
  # vhost VME
  config.vm.provision "shell", inline: <<-SHELL
apachectl restart
systemctl restart memcached.service
systemctl restart rabbitmq-server.service
SHELL
#=end

#=begin
  # vhost VME
  config.vm.provision "shell", inline: <<-SHELL
cat >> /etc/motd <<EOL

Welcome to VM-FDT! Please contact Max Deshkevich having any questions: 7workers@gmail.com
------------------------------------------
hosts :
192.168.56.118 acp.rg dmt.loc fdt ipspecs rg botmon api.botmon acp.botmon api.ipspecs acp.ipspecs www.ipspecs vme acp.vme api.vme vm-fdt

http://vm-fdt/rockmongo/            http://vm-fdt/phpmyadmin/             http://vm-fdt:1080/ (mailcatcher)

$ tail -n 50 /vagrant/logs/php_error.log
$ sudo su -
$ sudo apachectl restart
$ echo 'flush_all' | nc localhost 11211
$ xdebug-start
$ xdebug-stop

EOL
SHELL
#=end

#=begin
  # xdebug aliases
  config.vm.provision "shell", inline: <<-SHELL
cat >> /home/vagrant/.bash_profile <<EOL
alias xdebug-start='export XDEBUG_CONFIG="idekey=PHPSTORM"; export PHP_IDE_CONFIG="serverName=vm-fdt"'
alias xdebug-stop='unset XDEBUG_CONFIG; unset PHP_IDE_CONFIG'
EOL
SHELL
#=end


  config.vm.provision "shell", inline: <<-SHELL
echo ""
echo "Please clone all necessary projects (vagrant halt, clone ABC, vagrant up):"
echo ""
SHELL

end



